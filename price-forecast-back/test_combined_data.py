#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json

def test_combined_data_endpoint():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    base_url = "http://localhost:8009"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_news_data = [
        {
            "date": "2025-01-01",
            "ticker": "AFLT",
            "nn_news_sum": 1.2,
            "nn_news_mean": 0.03,
            "nn_news_max": 0.18,
            "nn_news_count": 43,
            "sentiment_mean": 0.5,
            "sentiment_sum": 20.0,
            "sentiment_count": 40,
            "sentiment_positive_count": 20,
            "sentiment_negative_count": 10,
            "sentiment_neutral_count": 10
        },
        {
            "date": "2025-01-02",
            "ticker": "AFLT",
            "nn_news_sum": 1.5,
            "nn_news_mean": 0.04,
            "nn_news_max": 0.20,
            "nn_news_count": 45,
            "sentiment_mean": 0.6,
            "sentiment_sum": 25.0,
            "sentiment_count": 42,
            "sentiment_positive_count": 25,
            "sentiment_negative_count": 8,
            "sentiment_neutral_count": 9
        }
    ]
    
    test_candle_data = [
        {
            "date": "2025-01-01",
            "ticker": "AFLT",
            "open": 100.0,
            "high": 105.0,
            "low": 95.0,
            "close": 102.0,
            "volume": 1000000,
            "rsi": 50.0,
            "macd": 0.5,
            "cci": 0.0,
            "ema9": 100.0,
            "ema50": 100.0,
            "areThreeWhiteSoldiers": 0,
            "areThreeBlackCrows": 0,
            "doji": 0,
            "bearishEngulfing": 0,
            "bullishEngulfing": 0
        },
        {
            "date": "2025-01-02",
            "ticker": "AFLT",
            "open": 102.0,
            "high": 107.0,
            "low": 97.0,
            "close": 104.0,
            "volume": 1200000,
            "rsi": 55.0,
            "macd": 0.6,
            "cci": 0.1,
            "ema9": 101.0,
            "ema50": 100.5,
            "areThreeWhiteSoldiers": 0,
            "areThreeBlackCrows": 0,
            "doji": 0,
            "bearishEngulfing": 0,
            "bullishEngulfing": 0
        },
        {
            "date": "2025-01-03",
            "ticker": "AFLT",
            "open": 104.0,
            "high": 109.0,
            "low": 99.0,
            "close": 106.0,
            "volume": 1100000,
            "rsi": 60.0,
            "macd": 0.7,
            "cci": 0.2,
            "ema9": 102.0,
            "ema50": 101.0,
            "areThreeWhiteSoldiers": 0,
            "areThreeBlackCrows": 0,
            "doji": 0,
            "bearishEngulfing": 0,
            "bullishEngulfing": 0
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
    request_data = {
        "sessionId": "test_session_123",
        "newsData": json.dumps(test_news_data),
        "candleData": json.dumps(test_candle_data)
    }
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API...")
        response = requests.get(f"{base_url}/health", timeout=5)
        if response.status_code == 200:
            health_data = response.json()
            print(f"‚úÖ API –∑–¥–æ—Ä–æ–≤: {health_data}")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        response = requests.post(
            f"{base_url}/process-combined-data",
            json=request_data,
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            params = result.get('params', [])
            print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(params)}")
            
            for i, param in enumerate(params):
                print(f"\n   –ó–∞–ø–∏—Å—å {i+1}:")
                print(f"     –î–∞—Ç–∞: {param.get('date')}")
                print(f"     –¢–∏–∫–µ—Ä: {param.get('ticker')}")
                print(f"     –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {param.get('close')}")
                print(f"     –ù–æ–≤–æ—Å—Ç–Ω–∞—è —Å—É–º–º–∞: {param.get('nn_news_sum')}")
                print(f"     –°–µ–Ω—Ç–∏–º–µ–Ω—Ç: {param.get('sentiment_mean')}")
                print(f"     RSI: {param.get('rsi')}")
                print(f"     MACD: {param.get('macd')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
            print(f"\nüîç –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∏–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å (–¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏)
            first_record = params[0]
            if first_record.get('nn_news_sum') > 0:
                print("   ‚úÖ –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã")
            else:
                print("   ‚ùå –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä—É—é –∑–∞–ø–∏—Å—å (–¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏)
            second_record = params[1]
            if second_record.get('nn_news_sum') > 0:
                print("   ‚úÖ –í—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—å: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã")
            else:
                print("   ‚ùå –í—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—å: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ—Ç—å—é –∑–∞–ø–∏—Å—å (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–æ–≤–æ—Å—Ç–µ–π)
            third_record = params[2]
            if third_record.get('nn_news_sum') == 0:
                print("   ‚úÖ –¢—Ä–µ—Ç—å—è –∑–∞–ø–∏—Å—å: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ 0")
            else:
                print("   ‚ùå –¢—Ä–µ—Ç—å—è –∑–∞–ø–∏—Å—å: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –Ω–∞–π–¥–µ–Ω—ã –Ω–æ–≤–æ—Å—Ç–∏")
            
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    success = test_combined_data_endpoint()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!")
