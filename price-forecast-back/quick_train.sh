#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick_train.sh <—Ñ–∞–π–ª_—Å_–¥–∞–Ω–Ω—ã–º–∏>

if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <—Ñ–∞–π–ª_—Å_–¥–∞–Ω–Ω—ã–º–∏.csv>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 stock_data.csv"
    exit 1
fi

DATA_FILE=$1
BASE_URL="http://localhost:8009"

echo "=== –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ ==="
echo "–§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö: $DATA_FILE"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
if [ ! -f "$DATA_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª $DATA_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s -f "$BASE_URL/health" > /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 main.py"
    exit 1
fi
echo "‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "2. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."
UPLOAD_RESPONSE=$(curl -s -X POST "$BASE_URL/upload-data" -F "file=@$DATA_FILE")

if echo "$UPLOAD_RESPONSE" | grep -q '"status":"success"'; then
    FILENAME=$(echo "$UPLOAD_RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['filename'])")
    ROWS=$(echo "$UPLOAD_RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['rows_count'])")
    echo "‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: $FILENAME ($ROWS —Å—Ç—Ä–æ–∫)"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞"
    echo "$UPLOAD_RESPONSE"
    exit 1
fi

# –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±—É—á–µ–Ω–∏—è
echo ""
echo "3. –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±—É—á–µ–Ω–∏—è..."
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è:"
echo "1) –ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ (30 –∑–∞–ø–∏—Å–µ–π, 50 –¥–µ—Ä–µ–≤—å–µ–≤)"
echo "2) –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ (50 –∑–∞–ø–∏—Å–µ–π, 100 –¥–µ—Ä–µ–≤—å–µ–≤)"
echo "3) –¢–æ—á–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ (100 –∑–∞–ø–∏—Å–µ–π, 200 –¥–µ—Ä–µ–≤—å–µ–≤)"
echo "4) –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"

read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice

case $choice in
    1)
        CONFIG='{"train_size": 30, "rf_n_estimators": 50, "gb_n_estimators": 50, "cv_splits": 3}'
        echo "–í—ã–±—Ä–∞–Ω–æ: –ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ"
        ;;
    2)
        CONFIG='{"train_size": 50, "rf_n_estimators": 100, "gb_n_estimators": 100, "cv_splits": 5}'
        echo "–í—ã–±—Ä–∞–Ω–æ: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ"
        ;;
    3)
        CONFIG='{"train_size": 100, "rf_n_estimators": 200, "gb_n_estimators": 200, "cv_splits": 5}'
        echo "–í—ã–±—Ä–∞–Ω–æ: –¢–æ—á–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ"
        ;;
    4)
        echo "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (JSON):"
        read CONFIG
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

# –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
echo ""
echo "4. –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏..."
echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $CONFIG"
echo "–û–±—É—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."

TRAIN_RESPONSE=$(curl -s -X POST "$BASE_URL/train" -F "filename=$FILENAME" -F "config=$CONFIG")

if echo "$TRAIN_RESPONSE" | grep -q '"status":"success"'; then
    echo "‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    
    # –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    MODELS=$(echo "$TRAIN_RESPONSE" | python3 -c "import sys, json; print(', '.join(json.load(sys.stdin)['models_trained']))")
    FEATURES=$(echo "$TRAIN_RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(f\"{data['feature_count']} -> {data['selected_features_count']}\")")
    
    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—É—á–µ–Ω–∏—è:"
    echo "   –û–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏: $MODELS"
    echo "   –ü—Ä–∏–∑–Ω–∞–∫–∏: $FEATURES"
    
    echo ""
    echo "üìà –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:"
    echo "$TRAIN_RESPONSE" | python3 -c "
import sys, json
data = json.load(sys.stdin)
for target, metrics in data['training_metrics'].items():
    print(f'   {target}: CV MAE = {metrics[\"cv_mae_mean\"]:.4f} (+/- {metrics[\"cv_mae_std\"]:.4f})')
"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è"
    echo "$TRAIN_RESPONSE"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞..."
HEALTH_RESPONSE=$(curl -s "$BASE_URL/health")
MODELS_LOADED=$(echo "$HEALTH_RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['models_loaded'])")

echo "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: $MODELS_LOADED"

# –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
echo ""
echo "6. –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ..."
TEST_DATA='{
  "params": [
    {
      "ticker": "TEST",
      "date": "2025-01-01",
      "nn_news_sum": 1.0,
      "nn_news_mean": 0.02,
      "nn_news_max": 0.15,
      "nn_news_count": 40,
      "sentiment_mean": 0.5,
      "sentiment_sum": 20.0,
      "sentiment_count": 40,
      "sentiment_positive_count": 20,
      "sentiment_negative_count": 10,
      "sentiment_neutral_count": 10,
      "rsi": 50.0,
      "macd": 0.0,
      "cci": 0.0,
      "ema9": 100.0,
      "ema50": 100.0,
      "areThreeWhiteSoldiers": 0,
      "areThreeBlackCrows": 0,
      "doji": 0,
      "bearishEngulfing": 0,
      "bullishEngulfing": 0,
      "open": 100.0,
      "high": 105.0,
      "low": 95.0,
      "close": 102.0,
      "volume": 1000000
    }
  ]
}'

PREDICT_RESPONSE=$(curl -s -X POST "$BASE_URL/predict" \
  -H "Content-Type: application/json" \
  -d "$TEST_DATA")

if echo "$PREDICT_RESPONSE" | grep -q '"predictions"'; then
    PREDICTIONS_COUNT=$(echo "$PREDICT_RESPONSE" | python3 -c "import sys, json; print(len(json.load(sys.stdin)['predictions']))")
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: $PREDICTIONS_COUNT —Å–≤–µ—á–µ–π"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è"
fi

echo ""
echo "üéâ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /predict –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /health –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"
echo "   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /docs –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API"
echo ""
echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:"
echo "   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8009/docs"
echo "   - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: http://localhost:8009/health"
echo "   - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤: http://localhost:8009/data-files"
