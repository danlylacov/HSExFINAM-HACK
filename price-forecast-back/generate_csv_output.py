#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV –¥–ª—è –∑–∞–¥–∞—á–∏
"""

import subprocess
import json
import sys

def generate_csv_output():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ticker,p1,p2,...,p20"""
    print("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV")
    print("=" * 50)
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        result = subprocess.run([
            'curl', '-X', 'POST', 'http://localhost:8009/predict',
            '-H', 'Content-Type: application/json',
            '-d', '@test_predict_data.json',
            '--max-time', '30',
            '--silent'
        ], capture_output=True, text=True, cwd='/home/daniil/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/FINAM_HACK/price-forecast-back')
        
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {result.stderr}")
            return False
        
        # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
        response_data = json.loads(result.stdout)
        ticker = response_data['ticker']
        returns = response_data['returns']
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º CSV —Å—Ç—Ä–æ–∫—É
        csv_line = f"{ticker}," + ",".join([f"{r:.6f}" for r in returns])
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∏–∫–µ—Ä–∞: {ticker}")
        print(f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–µ–π: {len(returns)}")
        
        print(f"\nüìã –§–æ—Ä–º–∞—Ç CSV (—Ç—Ä–µ–±—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–∞—á–∏):")
        print(f"ticker,p1,p2,p3,...,p20")
        print("-" * 50)
        print(csv_line)
        
        print(f"\nüìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–µ–π:")
        print(f"{'–ü–µ—Ä–∏–æ–¥':<8} {'–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å':<12} {'–ü—Ä–æ—Ü–µ–Ω—Ç':<10}")
        print("-" * 35)
        for i, ret in enumerate(returns):
            period = f"p{i+1}"
            percent = f"{ret*100:.2f}%"
            print(f"{period:<8} {ret:<12.6f} {percent:<10}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open('prediction_output.csv', 'w') as f:
            f.write(csv_line + '\n')
        
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: prediction_output.csv")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = generate_csv_output()
    if success:
        print("\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSV –≤—ã–≤–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –§–æ—Ä–º–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–¥–∞—á–∏!")
    else:
        print("\nüí• –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–≤–æ–¥–∞!")
        sys.exit(1)
